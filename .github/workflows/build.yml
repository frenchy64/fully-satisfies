name: Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  BABASHKA_VERSION: "1.12.196"
  DEFAULT_JAVA_VERSION: "21"

jobs:
  test:
    timeout-minutes: 5
    strategy:
      matrix:
        jdk: ['8', '11', '17', '21', '23']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.1
        with:
          lein: 2.11.2
      - run: ./scripts/test
  deploy:
    concurrency: deploy
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner == 'frenchy64' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # see ./scripts/deploy-doc.sh
      - name: gh-pages clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: tmp/fully-satisfies-gh-pages
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.1
        with:
          babashka-version: ${{env.BABASHKA_VERSION}}
          lein: 2.11.2
      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{env.DEFAULT_JAVA_VERSION}}
      - name: deploy
        env: 
          CLOJARS_USER: ${{ secrets.CLOJARS_USER }}
          CLOJARS_TOKEN: ${{ secrets.CLOJARS_TOKEN }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          git config --global user.email "actions-ci-bot@github.com"
          git config --global user.name "Ambrose Bonnaire-Sergeant"
          if [[ "$COMMIT_MSG" == "Release :major" ]]; then
            lein release :major
          elif [[ "$COMMIT_MSG" == "Release :minor" ]]; then
            lein release :minor
          elif [[ "$COMMIT_MSG" == "Release :patch" ]]; then
            lein release :patch
          else
            lein deploy snapshot
          fi
